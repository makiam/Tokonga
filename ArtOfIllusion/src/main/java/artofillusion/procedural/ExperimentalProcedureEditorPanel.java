/* Copyright 2024 by Maksim Khramov

   This program is free software; you can redistribute it and/or modify it under the
   terms of the GNU General Public License as published by the Free Software
   Foundation; either version 2 of the License, or (at your option) any later version.

   This program is distributed in the hope that it will be useful, but WITHOUT ANY
   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
   PARTICULAR PURPOSE.  See the GNU General Public License for more details. */

package artofillusion.procedural;

import artofillusion.PluginRegistry;
import java.lang.reflect.InvocationTargetException;

/**
 *
 * @author MaksK
 */
public class ExperimentalProcedureEditorPanel extends javax.swing.JPanel {

    /**
     * Creates new form ExperimentalProcedureEditorPanel
     */
    public ExperimentalProcedureEditorPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enableExperimentalEditor = new javax.swing.JCheckBox();

        enableExperimentalEditor.setSelected(loadEditorState());
        enableExperimentalEditor.setText("Enable Experimental Procedure Editor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enableExperimentalEditor)
                .addContainerGap(173, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(enableExperimentalEditor)
                .addContainerGap(254, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox enableExperimentalEditor;
    // End of variables declaration//GEN-END:variables
    
    public Boolean isEditorEnabled() {
        return enableExperimentalEditor.isSelected();
    }
    
    private Boolean loadEditorState() {
        var result = false;
        try {
            Object tmp = PluginRegistry.invokeExportedMethod("preferences.getBoolean", "artofillusion", "showExperimentalProcedureEditor");
            result = Boolean.valueOf(tmp.toString());
        } catch (InvocationTargetException | NoSuchMethodException e) {            
        }
        return result;
    }
}
