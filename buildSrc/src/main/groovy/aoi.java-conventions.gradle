plugins {
	id 'base'
 	id 'java'
    id 'org.jetbrains.kotlin.jvm'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

tasks.named('compileKotlin', org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask.class) {
    compilerOptions {
        freeCompilerArgs.add("-Xjvm-default=all-compatibility")
    }
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

[compileJava, compileTestJava]*.options.collect {options ->
  options.debug = true
  options.deprecation = true
  options.compilerArgs.add '-Xlint'
  options.compilerArgs.add '-Xlint:-unchecked'
  options.compilerArgs.add '-Xlint:-serial'
  options.compilerArgs.add '-Xlint:-rawtypes'
  options.compilerArgs.add '-Xlint:-processing'
}

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://jogamp.org/deployment/maven/'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
}


ext {
    lombokVersion = "1.18.+"
    junitVersion = "5.9.1"
    tinyLogVersion = "2.7.0"
}

dependencies {
    compileOnly("org.jetbrains:annotations:24.0.1")
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    
    implementation 'com.github.makiam:Buoy:1.0.0'

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testImplementation "org.junit.platform:junit-platform-suite:1.9.1"

    testImplementation group: 'org.netbeans', name: 'jemmy', version: '2.2.7.5'

    implementation "org.tinylog:slf4j-tinylog:${tinyLogVersion}"
    implementation "org.tinylog:tinylog-api:${tinyLogVersion}"
    implementation "org.tinylog:tinylog-impl:${tinyLogVersion}"

}

javadoc { 
    failOnError false
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

jar {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}